service core-api {
	// 用户登录
	@handler UserLogin
	post /user/login (LoginRequest) returns (LoginResponse)

	// 用户详情
	@handler UserDetail
	post /user/detail (UserDetailRequest) returns (UserDetailResponse)

	// 验证码发送
	@handler MailCodeSendRegister
	post /mail/code/send/register (MailCodeSendRequest) returns (MailCodeSendResponse)

	// 用户注册
	@handler UserRegister
	post /user/register (UserRegisterRequest) returns (UserRegisterResponse)

	// 获取资源详情
	@handler ShareBasicDetail
	get /share/basic/detail (ShareBasicDetailRequest) returns (ShareBasicDetailResponse)
}

@server(
	middleware: Auth
)
service core-api {
	// 文件上传
	@handler FileUpload
	post /file/upload (FileUploadRequest) returns (FileUploadResponse)

	// 用户文件的关联存储
	@handler UserRepositorySave
	post /user/repository/save (UserRepositorySaveRequest) returns (UserRepositorySaveResponse)

	// 用户文件列表
	@handler UserFileList
	post /user/file/list (UserFileListRequest) returns (UserFileListResponse)

	// 用户文件夹列表
	@handler UserFolderList
	post /user/folder/list (UserFolderListRequest) returns (UserFolderListResponse)

	// 用户文件名称修改
	@handler UserFileNameUpdate
	post /user/file/name/update (UserFileNameUpdateRequest) returns (UserFileNameUpdateResponse)

	// 用户-文件夹创建
	@handler UserFolderCreate
	post /user/folder/create (UserFolderCreateRequest) returns (UserFolderCreateResponse)

	// 用户-文件删除
	@handler UserFileDelete
	delete /user/file/delete (UserFileDeleteRequest) returns (UserFileDeleteResponse)

	// 用户-文件移动
	@handler UserFileMove
	put /user/file/move (UserFileMoveRequest) returns (UserFileMoveResponse)

	// 创建分享记录
	@handler ShareBasicCreate
	post /share/basic/create (ShareBasicCreateRequest) returns (ShareBasicCreateResponse)

	// 资源保存
	@handler ShareBasicSave
	post /share/basic/save (ShareBasicSaveRequest) returns (ShareBasicSaveResponse)

	// 刷新Authorization
	@handler RefreshAuthorization
	post /refresh/authorization (RefreshAuthorizationRequest) returns (RefreshAuthorizationResponse)

	// 文件上传前基本信息处理
	@handler FileUploadPrepare
	post /file/upload/prepare (FileUploadPrepareRequest) returns (FileUploadPrepareResponse)

	// 文件分片上传
	@handler FileUploadChunk
	post /file/upload/chunk (FileUploadChunkRequest) returns (FileUploadChunkResponse)

	// 文件分片上传完成
	@handler FileUploadChunkComplete
	post /file/upload/chunk/complete (FileUploadChunkCompleteRequest) returns (FileUploadChunkCompleteResponse)
}

type ShareBasicDetailRequest {
	Identity string `json:"identity,optional"`
}
type ShareBasicDetailResponse {
	RepositoryIdentity string `json:"repository_identity"`
	Name               string `json:"name"`
	Ext                string `json:"ext"`
	Size               int64  `json:"size"`
	Path               string `json:"path"`
}
type FileUploadPrepareRequest {
	Md5  string `json:"md5"`
	Name string `json:"name"`
	Ext  string `json:"ext"`
}
type FileUploadPrepareResponse {
	Identity string `json:"identity"`
	UploadId string `json:"upload_id"`
	Key      string `json:"key"`
}
type FileUploadChunkCompleteRequest {
	Md5        string      `json:"md5"`
	Name       string      `json:"name"`
	Ext        string      `json:"ext"`
	Size       int64       `json:"size"`
	Key        string      `json:"key"`
	UploadId   string      `json:"upload_id"`
	CosObjects []CosObject `json:"cos_objects"`
}
type FileUploadChunkCompleteResponse {
	Identity string `json:"identity"` // 存储池identity
}
type CosObject {
	PartNumber int    `json:"part_number"`
	Etag       string `json:"etag"`
}
type FileUploadChunkRequest { // formdata
	// key
	// upload_id
	// part_number
}
type FileUploadChunkResponse {
	Etag string `json:"etag"` // MD5
}

type RefreshAuthorizationRequest {
}

type RefreshAuthorizationResponse {
	Token        string `json:"token"`
	RefreshToken string `json:"refresh_token"`
}
type ShareBasicSaveRequest {
	RepositoryIdentity string `json:"repository_identity"`
	ParentId           int64  `json:"parent_id"`
}
type ShareBasicSaveResponse {
	Identity string `json:"identity"`
}

type ShareBasicCreateRequest {
	UserRepositoryIdentity string `json:"user_repository_identity"`
	ExpiredTime            int    `json:"expired_time"`
}
type ShareBasicCreateResponse {
	Identity string `json:"identity"`
}

type UserFileMoveRequest {
	Idnetity       string `json:"identity"`
	ParentIdnetity string `json:"parent_identity"`
}
type UserFileMoveResponse {
}
type UserFileDeleteRequest {
	Identity string `json:"identity"`
}
type UserFileDeleteResponse {
}

type UserFolderCreateRequest {
	ParentId int64  `json:"parent_id"`
	Name     string `json:"name"`
}
type UserFolderCreateResponse {
	Identity string `json:"identity"`
}

type UserFileNameUpdateRequest {
	Identity string `json:"identity"`
	Name     string `json:"name"`
}
type UserFileNameUpdateResponse {
}

type UserFolderListRequest {
	Identity string `json:"identity,optional"`
}
type UserFolderListResponse {
	List []*UserFolder `json:"list"`
}

type UserFolder {
	Identity string `json:"identity"`
	Name     string `json:"name"`
}
type UserFileListRequest {
	Identity string `json:"identity,optional"`
	Page     int    `json:"page,optional"`
	Size     int    `json:"size,optional"`
}
type UserFileListResponse {
	List  []*UserFile `json:"list"`
	Count int64       `json:"count"`
}
type UserFile {
	Id                 int64  `json:"id"`
	Identity           string `json:"identity"`
	RepositoryIdentity string `json:"repository_identity"`
	Name               string `json:"name"`
	Ext                string `json:"ext"`
	Path               string `json:"path"`
	Size               int64  `json:"size"`
}

type UserRepositorySaveRequest {
	ParentId           int64  `json:"parent_id"`
	RepositoryIdentity string `json:"repository_identity"`
	Ext                string `json:"ext"`
	Name               string `json:"name"`
}

type UserRepositorySaveResponse {
}

type FileUploadRequest {
	Hash string `json:"hash,optional"`
	Name string `json:"name,optional"`
	Ext  string `json:"ext,optional"`
	Size int64  `json:"size,optional"`
	Path string `json:"path,optional"`
}

type FileUploadResponse {
	Identity string `json:"identity"`
	Ext      string `json:"ext"`
	Name     string `json:"name"`
}

type UserRegisterRequest {
	Name     string `json:"name"`
	Password string `json:"password"`
	Email    string `json:"email"`
	Code     string `json:"code"`
}

type UserRegisterResponse {
}

type LoginRequest {
	Name     string `json:"name"`
	Password string `json:"password"`
}

type LoginResponse {
	Token        string `json:"token"`
	RefreshToken string `json:"refresh_token"`
}
type UserDetailRequest {
	Identity string `json:"identity"`
}
type UserDetailResponse {
	Name  string `json:"name"`
	Email string `json:"email"`
}
type MailCodeSendRequest {
	Email string `json:"email"`
}
type MailCodeSendResponse {
}